---
- name: Set up wired network configuration
  ansible.builtin.template:
    src: wired.network.j2
    dest: '/etc/systemd/network/10-{{ item }}.network'
    owner: root
    group: root
    mode: '644'
  loop: '{{ ansible_interfaces }}'
  when: wired|bool and (item.startswith('en') or
    item.startswith('eth')) and item not in bridge_interfaces
  notify: 'restart systemd-networkd'

- name: Set up wireless network configuration
  ansible.builtin.template:
    src: wireless.network.j2
    dest: '/etc/systemd/network/20-{{ item }}.network'
    owner: root
    group: root
    mode: '644'
  loop: '{{ ansible_interfaces }}'
  when: wireless|bool and item.startswith('wl')
  notify: 'restart systemd-networkd'

- name: Ensure override directory for systemd-networkd-wait-online exists
  ansible.builtin.file:
    path: /etc/systemd/system/systemd-networkd-wait-online.service.d/
    owner: root
    group: root
    mode: '755'
    state: directory
  when: wired|bool

- name: Install systemd-networkd-wait-online service override file
  ansible.builtin.copy:
    src: networkd-wait-override.conf
    dest: /etc/systemd/system/systemd-networkd-wait-online.service.d/override.conf
    owner: root
    group: root
    mode: '644'
  when: wired|bool

- name: Ensure systemd override directory for iwd exists
  ansible.builtin.file:
    path: /etc/systemd/system/iwd.service.d/
    owner: root
    group: root
    mode: '755'
    state: directory
  when: wireless|bool

- name: Install iwd service override file
  ansible.builtin.template:
    src: iwd_override.conf.j2
    dest: /etc/systemd/system/iwd.service.d/override.conf
    owner: root
    group: root
    mode: '644'
  when: wireless|bool

- name: Ensure /etc/iwd directory exists
  ansible.builtin.file:
    path: /etc/iwd
    owner: root
    group: root
    mode: '755'
    state: directory
  when: wireless|bool

- name: Install iwd
  community.general.pacman:
    name: iwd
    state: present
  when: wireless|bool

- name: Install iwd config
  ansible.builtin.template:
    src: iwd.conf.j2
    dest: /etc/iwd/main.conf
    owner: root
    group: root
    mode: '644'
  when: wireless|bool

- name: Enable iwd service
  ansible.builtin.systemd:
    name: iwd.service
    enabled: true
    state: started
    daemon_reload: true
  when: wireless|bool

- name: Set up network bridge device
  ansible.builtin.copy:
    src: bridge.netdev
    dest: '/etc/systemd/network/30-br0.netdev'
    owner: root
    group: root
    mode: '644'
  when: bridge|bool
  notify: 'restart systemd-networkd'

- name: Set up bridge network configuration
  ansible.builtin.copy:
    src: bridge.network
    dest: '/etc/systemd/network/30-br0.network'
    owner: root
    group: root
    mode: '644'
  when: bridge|bool
  notify: 'restart systemd-networkd'

- name: Add first wired network interface to bridge
  ansible.builtin.template:
    src: bridge-bind.network.j2
    dest: '/etc/systemd/network/10-{{ item }}.network'
    owner: root
    group: root
    mode: '644'
  when: bridge|bool
  loop: '{{ bridge_interfaces }}'
  notify: 'restart systemd-networkd'

- name: Enable systemd-networkd service
  ansible.builtin.systemd:
    name: systemd-networkd.service
    enabled: true
    state: started
    daemon_reload: true

- name: Set DNS in systemd-resolved config
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: '^#?DNS='
    line: "DNS={{ dns | join(' ') }}"
  notify: 'restart systemd-resolved'

- name: Set fallback DNS in systemd-resolved config
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: 'FallbackDNS='
    line: "FallbackDNS={{ dns_fallback | join(' ') }}"
  notify: 'restart systemd-resolved'

- name: Disable Multicast DNS in systemd-resolved config
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: 'MulticastDNS='
    line: 'MulticastDNS=no'
  notify: 'restart systemd-resolved'

- name: Check whether systemd DNS stub is already symlinked
  ansible.builtin.stat:
    path: '/run/systemd/resolve/stub-resolv.conf'
  register: stub

- name: Enable systemd DNS stub
  ansible.builtin.file:
    src: /run/systemd/resolve/stub-resolv.conf
    dest: /etc/resolv.conf
    state: link
    force: true
  when: stub.stat.exists and not stub.stat.islnk

- name: Enable systemd-resolved service
  ansible.builtin.systemd:
    name: systemd-resolved.service
    enabled: true
    state: started
    daemon_reload: true

- name: Set NTP in systemd-timesyncd config
  ansible.builtin.lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: '^#?NTP='
    line: "NTP={{ ntp | join(' ') }}"
  notify: 'restart systemd-timesyncd'

- name: Set fallback NTP in systemd-timesyncd config
  ansible.builtin.lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: 'FallbackNTP='
    line: "FallbackNTP={{ ntp_fallback | join(' ') }}"
  notify: 'restart systemd-timesyncd'

- name: Enable systemd-timesyncd service
  ansible.builtin.systemd:
    name: systemd-resolved.service
    enabled: true
    state: started
    daemon_reload: true
